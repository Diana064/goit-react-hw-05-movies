{"version":3,"file":"static/js/583.9eaac77d.chunk.js","mappings":"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","sources":["components/services/api.jsx","components/MovieData/MovieData.module.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.module.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ab3d3dcc8fd3c764fd32bbded21cd2e3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\nexport const getSearchMovies = async nameFilm => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${nameFilm}&page=1&include_adult=false`\n  );\n\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data.cast);\n  return response.data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n","import styled from 'styled-components';\nexport const Title = styled.h2``;\nexport const Wrapper = styled.div`\n  margin: 20px;\n`;\nexport const WrapperContenxt = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 25px;\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 0;\n`;\nexport const GenresItem = styled.li`\n  list-style: none;\n`;\nexport const TitleItem = styled.span`\n  font-weight: normal;\n`;\nexport const IMG = styled.img`\n  width: 350px;\n`;\nexport const ButtonGoBack = styled.button`\n  border: none;\n  padding: 10px;\n  display: flex;\n  gap: 10px;\n  color: #0d25ea;\n  background-color: #0000ff42;\n  border-radius: 10px;\n  margin: 10px;\n`;\n","import {\n  Wrapper,\n  GenresList,\n  GenresItem,\n  TitleItem,\n  IMG,\n  ButtonGoBack,\n  WrapperContenxt,\n} from './MovieData.module';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\nconst MovieData = ({ handleGoBack, img, title, average, genres, overview }) => {\n  return (\n    <Wrapper>\n      <h1>Movie Details</h1>\n      <ButtonGoBack type=\"button\" onClick={handleGoBack}>\n        <AiOutlineArrowLeft />\n        Go back\n      </ButtonGoBack>\n      <WrapperContenxt>\n        <div>\n          <IMG src={`${BASE_IMG_URL + img}`} alt={title}></IMG>\n        </div>\n        <div>\n          <h2>{title}</h2>\n          <h2>\n            Average:<TitleItem> {average}</TitleItem>\n          </h2>\n\n          <h2>Overview</h2>\n          {overview ?? <p>{overview}</p>}\n          <h2>Genres</h2>\n          <GenresList>\n            {genres.map(genre => (\n              <GenresItem key={genre.id}>{genre.name}</GenresItem>\n            ))}\n          </GenresList>\n          {/* <h2>{movies.genres}</h2> */}\n        </div>\n      </WrapperContenxt>\n    </Wrapper>\n  );\n};\nexport default MovieData;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const WrapperContext = styled.div`\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const WrapperButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  width: 75px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 2px solid #0d25ea;\n  text-align: center;\n\n  &.active {\n    color: #0d25ea;\n    background-color: #0000ff42;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport * as ImageService from '../components/services/api';\nimport { useParams } from 'react-router';\nimport { Outlet } from 'react-router';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport MovieData from 'components/MovieData/MovieData';\nimport {\n  WrapperButton,\n  WrapperContext,\n  StyledLink,\n} from './MovieDetails.module';\n\nexport default function MovieDetails() {\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    ImageService.getMovieDetails(movieId).then(setMovies);\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n  if (!movies) {\n    return;\n  }\n  return (\n    <>\n      <MovieData\n        handleGoBack={handleGoBack}\n        img={movies.poster_path}\n        title={movies.title}\n        average={movies.vote_average}\n        genres={movies.genres}\n        overview={movies.overview}\n      />\n      <WrapperContext>\n        <h2>Aditional Information: </h2>\n        <WrapperButton>\n          <StyledLink to=\"cast\" state={location.state}>\n            Сast\n          </StyledLink>\n          <StyledLink to=\"reviews\" state={location.state}>\n            Reviews\n          </StyledLink>\n        </WrapperButton>\n      </WrapperContext>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","response","data","results","getSearchMovies","nameFilm","getMovieDetails","movieId","getMovieCredits","console","log","cast","getMovieReviews","Wrapper","styled","WrapperContenxt","GenresList","GenresItem","TitleItem","IMG","ButtonGoBack","handleGoBack","img","title","average","genres","overview","type","onClick","src","alt","map","genre","name","id","WrapperContext","WrapperButton","StyledLink","NavLink","MovieDetails","useState","movies","setMovies","useParams","navigate","useNavigate","location","useLocation","useEffect","ImageService","then","state","from","poster_path","vote_average","to"],"sourceRoot":""}